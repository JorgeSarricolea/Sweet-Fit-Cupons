---
const { id, type, name, placeholder, icon } = Astro.props;
---
<change-password class="relative flex h-full ">
  <input
    id={id}
    type={type}
    name={name}
    placeholder={placeholder}
    class={`border-primary border-2 rounded-lg px-4 py-2 ${icon ? "pl-12" : ""} w-full gap-4 `}
  />
  <i class={`${icon} text-primary text-xl  left-4 top-2 absolute  `}></i>
  <i
    class={`fa-solid fa-eye text-primary text-xl right-4 top-2 absolute cursor-pointer `}
    id={`view-${id}`}></i>
</change-password>

<script>
  class ChangePassword extends HTMLElement {
    constructor() {
      super();

      // Obtener referencias a los elementos dentro del componente
      const passwordInput = this.querySelector('input');
      const viewButton = this.querySelector(`#view-${passwordInput.id}`);

      // Agregar un event listener al botón de visualización de contraseña
      viewButton.addEventListener('click', () => {
        console.log(`${passwordInput.id}`)
        if (passwordInput.type === 'password') {
          passwordInput.type = 'text';
          viewButton.classList.remove('fa-eye');
          viewButton.classList.add('fa-eye-slash');
        } else {
          passwordInput.type = 'password';
          viewButton.classList.remove('fa-eye-slash');
          viewButton.classList.add('fa-eye');
        }
      });
    }
  }

  customElements.define('change-password', ChangePassword);
</script>
